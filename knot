#!/usr/bin/env ruby
require 'nokogiri'
require 'open-uri'
require 'matrix'

W = 1200
H = 900
CX = W / 2
CY = H / 2
BG = '#012169'
LINE = '#C8102E'
STROKE = 'white'
HORIZ = 4
VERT = 3
ROWS = VERT * 2 + 1
COLS = HORIZ * 2 + 1
GRIDSIZE = 100
INNER_WIDTH = 20
STROKE_WIDTH = 10

class Point < Vector

  def x
    self[0]
  end

  def y
    self[1]
  end

  def self.midpoint(a, b)
    (a + b) / 2
  end
end

class Path
  def initialize
    @path = []
  end

  def M(m)
    @path.push __method__, m.x, m.y
  end

  def m(m)
    @path.push __method__, m.x, m.y
  end

  def L(m)
    @path.push __method__, m.x, m.y
  end

  def l(m)
    @path.push __method__, m.x, m.y
  end

  def A(rx, ry, x_axis_rotation, large_arc, sweep, m)
    @path.push __method__, rx, ry, x_axis_rotation, large_arc, sweep, m.x, m.y
  end

  def z
    @path.push 'z'
    @path.join(' ')
  end
end

class KnotCell
  attr_reader :c, :i, :o

  def initialize(c, inner, stroke)
    outer = inner + stroke

    @c = c

    pos = {
      n: [0, -1], ne: [0.5, -0.5], e: [1, 0], se: [0.5, 0.5],
      s: [0, 1], sw: [-0.5, 0.5], w: [-1, 0], nw: [-0.5, -0.5]
    }

    @i = pos.each_with_object({}) do |(k, v), a|
      a[k] = Point[c.x + v[0] * inner,
                   c.y + v[1] * inner]
    end

    @o = pos.each_with_object({}) do |(k, v), a|
      a[k] = Point[c.x + v[0] * outer,
                   c.y + v[1] * outer]
    end

    subpos = [
      [:n, :sw], [:n, :se],
      [:e, :sw], [:e, :nw],
      [:s, :nw], [:s, :ne],
      [:w, :ne], [:w, :se],
    ]
    subpos.each do |v|
      sym = (v[0].to_s << '_' << v[1].to_s).to_sym
      @o[sym] = Point[@o[v[0]].x + stroke * pos[v[1]][0],
                      @o[v[0]].y + stroke * pos[v[1]][1]]
    end
  end
end

def create_grid
  Matrix.build(ROWS, COLS) do |i, j|
    c = Point[GRIDSIZE * j + GRIDSIZE / 2,
              GRIDSIZE * i + GRIDSIZE / 2]
    KnotCell.new(c, INNER_WIDTH, STROKE_WIDTH)
  end
end

def draw_grid(doc, svg, grid)
  Nokogiri::XML::Node.new 'g', doc do |g|
    svg.add_child g
    g[:fill] = 'white'

    grid.each do |e|
      Nokogiri::XML::Node.new 'circle', doc do |circle|
        g.add_child circle
        circle[:cx] = e.c.x
        circle[:cy] = e.c.y
        circle[:r] = 1
      end
    end
  end

  Nokogiri::XML::Node.new 'g', doc do |g|
    svg.add_child g
    g[:fill] = 'cyan'

    grid.each do |e|
      e.i.each do |k, v|
        Nokogiri::XML::Node.new 'circle', doc do |circle|
          g.add_child circle
          circle[:cx] = v.x
          circle[:cy] = v.y
          circle[:r] = 1
        end
      end
    end

    grid.each do |e|
      e.o.each do |k, v|
        Nokogiri::XML::Node.new 'circle', doc do |circle|
          g.add_child circle
          circle[:cx] = v.x
          circle[:cy] = v.y
          circle[:r] = 1
        end
      end
    end
  end
end

def draw_knot(grid)
  direction = Vector[2, 2]
  position = Vector[1, 2]

  d = Path.new
  i = 0
  while direction
    e = grid[*position]

    if i == 2
      # Bend SE
      sw = grid[*position + direction / 2]
      ne = grid[*position + Vector[-1, 1]]
      e2 = grid[*position + Vector[0, 2]]
      n2 = grid[*position + Vector[-2, 0]]
      d.M e.o[:e_sw]
      d.L Point.midpoint(e.i[:e], sw.i[:n])
      d.A 1, 1, 0, 0, 0, Point.midpoint(ne.i[:s], e2.i[:w])
      d.L n2.o[:s_ne]
      d.L n2.o[:e_sw]
      d.L Point.midpoint(ne.i[:e], e2.i[:n])
      d.A 1, 1, 0, 0, 1, Point.midpoint(e.i[:s], sw.i[:w])
      d.L e.o[:s_ne]
      direction = Vector[-2, -2]
      position += Vector[-2, 0]
    elsif direction == Vector[-2, -2]
      nw = grid[*position + direction]
      d.M nw.o[:e_sw]
      d.L e.o[:n_sw]
      d.L e.o[:w_ne]
      d.L nw.o[:s_ne]
    else
      sw = grid[*position + direction]
      d.M e.o[:e_sw]
      d.L sw.o[:n_sw]
      d.L sw.o[:w_ne]
      d.L e.o[:s_ne]

      position += direction
    end

    i += 1
    direction = false if i > 3
  end

  d.z
end

grid = create_grid
doc = Nokogiri::XML::Document.new

Nokogiri::XML::Node.new 'svg', doc do |svg|
  doc.add_child svg
  svg[:xmlns] = 'http://www.w3.org/2000/svg'
  svg[:viewBox] = "0 0 #{W} #{H}"
  svg[:width] = 1200
  svg[:height] = 900

  # Background.
  Nokogiri::XML::Node.new 'path', doc do |path|
    svg.add_child path
    path[:d] = "M0,0 v#{H} h#{W} v-#{H} z"
    path[:fill] = BG
  end

  Nokogiri::XML::Node.new 'g', doc do |g|
    svg.add_child g
    g[:fill] = LINE

    Nokogiri::XML::Node.new 'path', doc do |path|
      g.add_child path
      path[:d] = draw_knot grid
    end
  end
  draw_grid doc, svg, grid
end

puts doc.to_xml indent:2
