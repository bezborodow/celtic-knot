#!/usr/bin/env ruby
require 'nokogiri'
require 'open-uri'
require 'matrix'

W = 800
H = 600
CX = W / 2
CY = H / 2
BG = '#012169'
LINE = '#C8102E'
STROKE = 'white'
HORIZ = 4
VERT = 3
ROWS = VERT * 2 - 1
COLS = HORIZ * 2 - 1
GRIDSIZE = 100
INNER = 20
OUTER = 25

class Point
  attr_accessor :x, :y

  def initialize x, y
    @x = x
    @y = y
  end
end

class KnotCell
  attr_reader :c, :i, :o

  def initialize(c, inner, outer)
    @c = c

    pos = {
      n: [0, 1], ne: [0.5, 0.5], e: [1, 0], se: [0.5, -0.5],
      s: [0, -1], sw: [-0.5, -0.5], w: [-1, 0], nw: [-0.5, 0.5]
    }

    @i = pos.map do |ordinal, xy|
      Point.new(c.x + xy[0] * inner, c.y + xy[1] * inner)
    end

  end
end

def create_grid
  Matrix.build(ROWS, COLS) do |i, j|
    c = Point.new(GRIDSIZE * j + GRIDSIZE / 2, GRIDSIZE * i + GRIDSIZE / 2)
    KnotCell.new(c, INNER, OUTER)
  end
end

def draw_grid(doc, svg, grid)
  Nokogiri::XML::Node.new 'g', doc do |g|
    svg.add_child g
    g[:fill] = 'white'

    grid.each do |e|
      Nokogiri::XML::Node.new 'circle', doc do |circle|
        g.add_child circle
        circle[:cx] = e.c.x
        circle[:cy] = e.c.y
        circle[:r] = 1
      end
    end
  end

  Nokogiri::XML::Node.new 'g', doc do |g|
    svg.add_child g
    g[:fill] = 'cyan'

    grid.each do |e|
      e.i.each do |k, v|
        Nokogiri::XML::Node.new 'circle', doc do |circle|
          g.add_child circle
          circle[:cx] = k.x
          circle[:cy] = k.y
          circle[:r] = 1
        end
      end
    end
  end
end

grid = create_grid
doc = Nokogiri::XML::Document.new

Nokogiri::XML::Node.new 'svg', doc do |svg|
  doc.add_child svg
  svg[:xmlns] = 'http://www.w3.org/2000/svg'
  svg[:viewBox] = "0 0 #{W} #{H}"
  svg[:width] = 1200
  svg[:height] = 900

  # Background.
  Nokogiri::XML::Node.new 'path', doc do |path|
    svg.add_child path
    path[:d] = "M0,0 v#{H} h#{W} v-#{H} z"
    path[:fill] = BG
  end

  draw_grid doc, svg, grid
end

puts doc.to_xml indent:2
